let selectedElement = null;
let isModalOpen = false;

const MODAL_ROOT_ID = 'dce-modal-root';
// const MODAL_SAVE_BUTTON_ID = 'dce-modal-save';
// const MODAL_CLOSE_BUTTON_ID = 'dce-modal-close';

// Add an event listener to highlight elements on mouse hover
document.addEventListener("mouseover", (event) => {
    if (isModalOpen) {
        return;
    }
    event.target.style.outline = "2px solid red";
});

// Remove the highlight when the mouse moves away
document.addEventListener("mouseout", (event) => {
    if (isModalOpen) {
        return;
    }
    event.target.style.outline = "none";
});


// Right-click context menu handler
document.addEventListener('contextmenu', function (e) {
    selectedElement = e.target;
    console.log('Selected element:', selectedElement);
    console.log('Query selector:', getQuerySelector(selectedElement));
});

// Message handler
window.onmessage = (event) => {
    const { action } = event.data;
    if (action === 'closeModal') {
        handleCloseModalMessage();
    }
};

// Inject react component into the page on page load
https://stackoverflow.com/a/43245774/6513094
if (document.readyState !== 'complete') {
    window.addEventListener('load', handlePageLoad);
} else {
    handlePageLoad();
}

function handlePageLoad() {
    console.log('Page loaded');
    injectModal();
}


// Listen for the message from the background script
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === 'annotate') {
        const querySelector = getQuerySelector(selectedElement);

        console.log('Handling annotate action:', querySelector);

        openModal({ querySelector });

        // // Fetch content for the modal from the API
        // fetch(`http://localhost:3000/api/fetchContent?selector=${encodeURIComponent(querySelector)}`)
        //     .then(response => response.json())
        //     .then(data => {
        //         openModal(data.annotation);
        //     })
        //     .catch(error => console.error('Error fetching annotation:', error));


    }
});

// Open a resizable modal at the bottom of the page
function openModal({ querySelector }) {
    isModalOpen = true;
    console.log('Posting a message to open the modal');
    postMessage({ action: 'openModal', querySelector });
}


function injectModal() {
    // Create the modal container if it doesn't exist
    if (!document.getElementById(MODAL_ROOT_ID)) {
        // Create a div for the modal
        const modalContainer = document.createElement('div');
        modalContainer.id = MODAL_ROOT_ID;

        // Append the container to the body
        document.body.appendChild(modalContainer);

        // Inject the React bundle JS file (generated by Vite)
        const script = document.createElement('script');
        script.src = chrome.runtime.getURL('ui/dist/assets/index.js'); // Adjust the path if needed
        document.body.appendChild(script);

        // Optionally, inject the React CSS (if you have styles)
        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = chrome.runtime.getURL('ui/dist/assets/index.css'); // Adjust the path if needed
        document.head.appendChild(link);

    }
}


function handleCloseModalMessage() {
    isModalOpen = false;
}

// Function to get the query selector of the selected element
// TODO: Improve this logic. This is a basic implementation.
function getQuerySelector(element) {
    let selector = '';
    if (element.id) {
        selector = `#${element.id}`;
    } else if (element.className) {
        selector = `.${element.className.trim().split(' ').join('.')}`;
    } else {
        selector = element.tagName.toLowerCase();
    }
    return selector;
}
